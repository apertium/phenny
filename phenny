#!/usr/bin/env python3
"""
phenny - An IRC Bot
Copyright 2008, Sean B. Palmer, inamidst.com
Licensed under the Eiffel Forum License 2.

http://inamidst.com/phenny/

Note: DO NOT EDIT THIS FILE.
Run ./phenny, then edit ~/.phenny/default.py
Then run ./phenny again
"""

import argparse
import imp
import logging
import os
import sys
from textwrap import dedent as trim
from tools import dot_dir

logging.basicConfig(format='%(levelname)s: %(message)s')
logger = logging.getLogger('phenny')

def check_python_version(): 
    if sys.version_info < (3, 0): 
        logger.critical('Requires Python 3.0 or later, from www.python.org')
        sys.exit(1)

def create_default_config(path):
    source = os.path.join(os.path.dirname(__file__), 'default.py.example')
    
    with open(source, 'r') as src, open(path, 'w') as dst:
        dst.write(src.read())

def create_default_config_file(dotdir):
    logger.info('Creating a default config file at ~/.phenny/default.py...')
    default = os.path.join(dotdir, 'default.py')
    create_default_config(default)

    logger.info('Done; now you can edit default.py, and run phenny! Enjoy.')
    sys.exit(0)

def create_dotdir(dotdir): 
    logger.info('Creating a config directory at ~/.phenny...')

    try: os.mkdir(dotdir)
    except Exception as e: 
        logger.critical('There was a problem creating %s:' % dotdir)
        logger.critical(e.__class__ + ' ' + str(e))
        logger.critical('Please fix this and then run phenny again.')
        sys.exit(1)

    create_default_config_file(dotdir)

def check_dotdir(): 
    default = os.path.join(dotdir, 'default.py')

    if not os.path.isdir(dotdir): 
        create_dotdir(dotdir)
    elif not os.path.isfile(default): 
        create_default_config_file(dotdir)

def config_names(config): 
    config = config or 'default'

    def files(d): 
        names = os.listdir(d)
        return list(os.path.join(d, fn) for fn in names if fn.endswith('.py'))

    here = os.path.join('.', config)
    if os.path.isfile(here): 
        return [here]
    if os.path.isfile(here + '.py'): 
        return [here + '.py']
    if os.path.isdir(here): 
        return files(here)

    there = os.path.join(dotdir, config)
    if os.path.isfile(there): 
        return [there]
    if os.path.isfile(there + '.py'): 
        return [there + '.py']
    if os.path.isdir(there): 
        return files(there)

    logger.critical("Couldn't find a config file!")
    logger.critical('What happened to ~/.phenny/default.py?')
    sys.exit(1)

def main(argv=None): 
    # Step One: Parse The Command Line
 
    parser = argparse.ArgumentParser(description="A Python IRC bot.")
    parser.add_argument('-c', '--config', metavar='fn', 
       help='use this configuration file or directory')
    parser.add_argument('-v', '--verbose',
       action='store_true', help='enable verbose logging')
    args = parser.parse_args(argv)
 
    logger.setLevel(logging.DEBUG if args.verbose else logging.INFO)

    # Step Two: Check Dependencies
 
    check_python_version() # require python2.4 or later
    if not args.config:
        check_dotdir() # require ~/.phenny, or make it and exit
 
    # Step Three: Load The Configurations
 
    config_modules = []
    for config_name in config_names(args.config): 
        name = os.path.basename(config_name).split('.')[0] + '_config'
        module = imp.load_source(name, config_name)
        module.filename = config_name
 
        if not hasattr(module, 'prefix'): 
            module.prefix = r'\.'
 
        if not hasattr(module, 'name'): 
            module.name = 'Phenny Palmersbot, http://inamidst.com/phenny/'
 
        if not hasattr(module, 'port'): 
            module.port = 6667
            
        if not hasattr(module, 'sasl'):
            module.sasl = False
        
        if not hasattr(module, 'ssl'):
            module.ssl = False

        if not hasattr(module, 'ca_certs'):
            module.ca_certs = None
 
        if not hasattr(module, 'ipv6'):
            module.ipv6 = False

        if not hasattr(module, 'password'): 
            module.password = None

        if module.host == 'irc.example.net': 
            logger.critical('You must edit the config file first!')
            logger.critical("You're currently using %s" % module.filename)
            sys.exit(1)

        config_modules.append(module)

    # Step Four: Load Phenny

    try: from __init__ import run
    except ImportError: 
        try: from phenny import run
        except ImportError: 
            logger.critical("Couldn't find phenny to import")
            sys.exit(1)

    # Step Five: Initialise And Run The Phennies

    # @@ ignore SIGHUP
    for config_module in config_modules: 
        run(config_module) # @@ thread this

if __name__ == '__main__': 
    main()
